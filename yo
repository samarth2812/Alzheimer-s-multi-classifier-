const isWorkflowRole = (role: Position): role is WorkflowRole => {
  return role in roleStepMap;
};


export const generateWhereFilter = (
  role: Position,
  department?: string,
  tab?: string,
  userEmail?: string
) => {
  if (!isWorkflowRole(role)) {
    throw new Error(`Invalid workflow role: ${role}`);
  }

  const step = roleStepMap[role]; // âœ… No error now

  const baseConditions: any[] = [{ isDeleted: false }];

  if (tab === "latest" || tab === "created") {
    baseConditions.push({ currStep: step }, { rejectedStatus: false });

    if (role === "DEPARTMENT_MAKER" && userEmail) {
      baseConditions.push({
        OR: [{ assignedTo: userEmail }],
      });
    }
  } else if (tab === "rejected") {
    baseConditions.push({ currStep: step }, { rejectedStatus: true });

    if (role === "DEPARTMENT_MAKER" && userEmail) {
      baseConditions.push({
        OR: [{ assignedTo: userEmail }],
      });
    }
  } else if (tab === "closure") {
    baseConditions.push({ currStep: 4 });

    if (role === "COMPLIANCE_MAKER") {
      baseConditions.push({
        OR: [{ prevStep: 0 }, { prevStep: 3 }],
      });
    } else if (role === "COMPLIANCE_CHECKER") {
      baseConditions.push({ prevStep: 1 });
    }
  }

  if (
    (role === "DEPARTMENT_MAKER" || role === "DEPARTMENT_CHECKER") &&
    department
  ) {
    baseConditions.push({ department });
  }

  return {
    AND: baseConditions,
  };
};
