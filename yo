export const fetchCommunications = async (
  type: "inbox" | "sent" | "thread",
  userEmail: string,
  threadId?: string,
  page: number = 1,
  pageSize: number = 10
) => {
  try {
    const where = buildFetchFilter(type, userEmail, threadId);
    const offset = (page - 1) * pageSize;

    const [communications, total] = await Promise.all([
      prisma.communication.findMany({
        where,
        skip: offset,
        take: pageSize,
        orderBy: { createdAt: "desc" },
        include: {
          replies: true,
        },
      }),
      prisma.communication.count({ where }),
    ]);

    return {
      success: true,
      data: communications,
      pagination: {
        total,
        page,
        pageSize,
        totalPages: Math.ceil(total / pageSize),
      },
    };
  } catch (error) {
    console.error("Error fetching communications:", error);
    throw new Error("Failed to fetch communications");
  }
};
