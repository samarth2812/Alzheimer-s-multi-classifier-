const roleDisplayToEnumMap: Record<string, string> = {
  "Compliance Maker": "COMPLIANCE_MAKER",
  "Compliance Checker": "COMPLIANCE_CHECKER",
  "Department Maker": "DEPARTMENT_MAKER",
  "Department Checker": "DEPARTMENT_CHECKER",
};
if (filters?.userRole?.trim()) {
  const roleEnum = roleDisplayToEnumMap[filters.userRole.trim()];
  if (roleEnum) {
    where.AND.push({ role: roleEnum });
  }
}
if (filters?.search?.trim() && filters.search.trim().length >= 2) {
  const searchTerm = filters.search.trim().toLowerCase();

  // Reverse map: get possible roles from label match
  const matchingRoles = Object.entries(roleDisplayToEnumMap)
    .filter(([label]) => label.toLowerCase().includes(searchTerm))
    .map(([, enumValue]) => enumValue);

  const roleConditions = matchingRoles.length
    ? [{ role: { in: matchingRoles } }]
    : [];

  where.AND.push({
    OR: [
      ...roleConditions,
      { actionType: { contains: searchTerm, mode: "insensitive" } },
      { performedByName: { contains: searchTerm, mode: "insensitive" } },
      { performedByEmail: { contains: searchTerm, mode: "insensitive" } },
    ],
  });
}
