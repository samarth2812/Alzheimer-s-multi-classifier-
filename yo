import { PrismaClient } from "@prisma/client";
import { ApiError } from "../../utils/ApiError";
import { buildFetchFilter } from "../../helpers/communicationHelper";

const prisma = new PrismaClient();

export const getCommunicationNotificationService = async (
  userEmail: string
): Promise<{ success: boolean; data: { inboxCount: number; sentCount: number } }> => {
  try {
    const inboxFilter = buildFetchFilter("inbox", userEmail);
    const sentFilter = buildFetchFilter("sent", userEmail);

    const [inboxCount, sentCount] = await Promise.all([
      prisma.communication.count({ where: inboxFilter }),
      prisma.communication.count({ where: sentFilter }),
    ]);

    return {
      success: true,
      data: {
        inboxCount,
        sentCount,
      },
    };
  } catch (error: any) {
    console.error("Error fetching communication notifications:", error);
    throw ApiError.internal("Unable to fetch communication notification counts");
  }
};


