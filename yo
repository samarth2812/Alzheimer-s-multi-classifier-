import React, { useRef } from "react";
import { Box, TextField, Typography } from "@mui/material";
import { useTheme } from "@mui/material/styles";

interface CustomTextAreaProps {
  label?: string;
  placeholder?: string;
  value: string;
  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;
  name?: string;
  error?: string;
  disabled?: boolean;
  autoFocus?: boolean;
  onKeyPress?: (event: React.KeyboardEvent<HTMLDivElement>) => void;
  multiline?: boolean;
  maxRows?: number;
  fullWidth?: boolean;
  size?: "small" | "medium";
}

export const CustomTextArea: React.FC<CustomTextAreaProps> = ({
  label,
  placeholder = "",
  value,
  onChange,
  name,
  error,
  disabled = false,
  autoFocus = false,
  onKeyPress,
  multiline = true,
  maxRows = 5,
  fullWidth = true,
  size = "small",
}) => {
  const theme = useTheme();
  const inputRef = useRef(null);

  return (
    <Box sx={{ width: "100%", opacity: disabled ? 0.5 : 1 }}>
      {label && (
        <Typography
          component="label"
          sx={{
            fontSize: "0.75rem",
            fontWeight: 500,
            color: theme.palette.custom.text2,
            mb: 0.5,
            ml: 1.6,
            display: "block",
          }}
        >
          {label}
        </Typography>
      )}

      <TextField
        inputRef={inputRef}
        fullWidth={fullWidth}
        multiline={multiline}
        maxRows={maxRows}
        name={name}
        value={value}
        onChange={onChange}
        onKeyPress={onKeyPress}
        placeholder={placeholder}
        autoFocus={autoFocus}
        disabled={disabled}
        size={size}
        variant="outlined"
        sx={{
          "& .MuiOutlinedInput-root": {
            borderRadius: "12px",
            px: 1.5,
            fontSize: "0.7rem",
            backgroundColor: theme.palette.custom?.background1 || "#f4f4f4",
            "& fieldset": {
              border: "none",
            },
            "&:hover fieldset": {
              border: "none",
            },
            "&.Mui-focused fieldset": {
              border: "none",
            },
          },
          "& .MuiInputBase-input": {
            color: theme.palette.custom?.text1 || "#000",
            "&::placeholder": {
              color: theme.palette.custom?.text2 || "#999",
              opacity: 0.7,
            },
          },
        }}
      />

      {error && (
        <Typography
          variant="h6"
          color="error"
          sx={{
            mt: 1,
            fontSize: "0.6rem",
            textAlign: "center",
            fontWeight: 400,
          }}
        >
          {error}
        </Typography>
      )}
    </Box>
  );
};
