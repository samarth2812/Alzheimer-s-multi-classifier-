  return (
    <>
      <Box mb={3} sx={{ width: "100%", height: "100%", display: "flex", flexDirection: "column" }}>
        <Box sx={{ ...topBarStyle, mb: 1, gap: 2 }}>
          <TextField
            fullWidth
            placeholder="Search Communication Records..."
            variant="outlined"
            sx={topBarSearchStyle}
            value={searchTerm}
            onChange={handleSearch}
            InputProps={{
              startAdornment: (
                <InputAdornment position="start">
                  <SearchIcon
                    fontSize="medium"
                    sx={{
                      color: (theme) => theme.palette.custom.text2,
                      fontSize: "1rem !important",
                    }}
                  />
                </InputAdornment>
              ),
            }}
          />
          <Button
            size="small"
            startIcon={<AddIcon />}
            onClick={handleAddCommClick}
            color="info"
            sx={animatedButtonStyle}
          >
            Add Communication
          </Button>
        </Box>
        {loading ? (
          <Box>
            {[...Array(5)].map((_, index) => (
              <Skeleton
                key={index}
                variant="rectangular"
                animation="wave"
                height={40}
                sx={{
                  mb: 2,
                  borderRadius: 2,
                  backgroundColor: (theme) => theme.palette.custom.background1,
                }}
              />
            ))}
          </Box>
        ) : tableData && tableData?.rows && tableData?.rows.length > 0 ? (
          <Box pb={2} sx={{ maxHeight: "calc(100vh - 180px)", overflow: "auto" }}>
            <SideDrawer
              open={drawerOpen}
              handleDrawerToggle={() => setDrawerOpen(!drawerOpen)}
              selectedTab={tab}
              onSelectTab={(val) => setTab(val)}
            />
            <DataTable
              table={tableData}
              isSorted={false}
              entriesPerPage={true}
              showTotalEntries={true}
              noEndBorder
            />
          </Box>
        ) : (
          <EmptyStateBox
            icon={BsTable}
            title="Currently there are no created Communications"
            description="Start a new communication by tapping the 'Add Communication' button "
          />
        )}
      </Box>
      <CommunicationFormDialog
        open={isModalOpen}
        onClose={() => setIsModalOpen(false)}
        initialData={editCommData}
        user={user}
        onSubmit={() => {
          fetchData();
        }}
      />
    </>
  );
