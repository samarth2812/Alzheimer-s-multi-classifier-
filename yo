export const exportObservationsExcel = async (
  req: customRequest,
  res: Response,
  next: NextFunction
): Promise<void> => {
  try {
    const user = req.user!;
    const {
      status,
      priorityLevel,
      department,
      theme,
      search,
      startDate,
      endDate,
    } = req.query;

    const filters = {
      status: status as "open" | "closed",
      priorityLevel: priorityLevel as observationPriority,
      department: department as Department,
      theme: theme as ObservationTheme,
      search: search as string,
      startDate: startDate as string,
      endDate: endDate as string,
    };

    const timestamp = new Date().toISOString().replace(/[:.]/g, "-");
    const filename = `observations_${timestamp}.xlsx`;

    res.setHeader(
      "Content-Type",
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    );
    res.setHeader("Content-Disposition", `attachment; filename="${filename}"`);

    await generateObservationExcel(res, user.role, user.department, filters);
  } catch (error: any) {
    console.error("Error exporting observations Excel:", error);

    if (!res.headersSent) {
      res.status(500).json({
        success: false,
        message: `Failed to generate Excel export: ${
          error instanceof Error ? error.message : "Unknown error"
        }`,
      });
    } else {
      res.end();
    }
  }
};

export const exportIncidentsExcel = async (
  req: customRequest,
  res: Response,
  next: NextFunction
): Promise<void> => {
  try {
    const user = req.user!;
    const {
      status,
      severity,
      department,
      type,
      search,
      startDate,
      endDate,
    } = req.query;

    const filters = {
      status: status as "open" | "closed" | "rejected",
      severity: severity as IncidentSeverity,
      department: department as Department,
      type: type as IncidentType,
      search: search as string,
      startDate: startDate as string,
      endDate: endDate as string,
    };

    const timestamp = new Date().toISOString().replace(/[:.]/g, "-");
    const filename = `incidents_${timestamp}.xlsx`;

    res.setHeader(
      "Content-Type",
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    );
    res.setHeader("Content-Disposition", `attachment; filename="${filename}"`);

    await generateIncidentExcel(res, user.role, user.department, filters);
  } catch (error: any) {
    console.error("Error exporting incidents Excel:", error);

    if (!res.headersSent) {
      res.status(500).json({
        success: false,
        message: `Failed to generate Excel export: ${
          error instanceof Error ? error.message : "Unknown error"
        }`,
      });
    } else {
      res.end();
    }
  }
};
