const twoDayReminderJob: CronJobWrapper = {
  running: false,
  job: cron.schedule(
    "0 9 * * *",
    async () => {
      try {
        console.log("Starting 2-day reminder job...");

        const [
          obligationReminders,
          indentReminders,
          incidentReminders,
          observationReminders,
        ] = await Promise.all([
          sendRegulatoryTimelineReminders(2),
          sendIndentsDueDateReminders(2),
          sendIncidentsDueDateReminders(2),
          sendObservationDueDateReminders(2),
        ]);

        console.log("2-day reminder job completed:", {
          obligationReminders,
          indentReminders,
          incidentReminders,
          observationReminders,
        });
      } catch (error: any) {
        console.error("2-day reminder job failed:", error);
      }
    },
    {
      scheduled: false,
      timezone: "Asia/Kolkata",
    } as any
  ),
};

const oneDayReminderJob: CronJobWrapper = {
  running: false,
  job: cron.schedule(
    "0 9 * * *",
    async () => {
      try {
        console.log("Starting 1-day reminder job...");

        const [
          obligationReminders,
          indentReminders,
          incidentReminders,
          observationReminders,
        ] = await Promise.all([
          sendRegulatoryTimelineReminders(1),
          sendIndentsDueDateReminders(1),
          sendIncidentsDueDateReminders(1),
          sendObservationDueDateReminders(1),
        ]);

        console.log("1-day reminder job completed:", {
          obligationReminders,
          indentReminders,
          incidentReminders,
          observationReminders,
        });
      } catch (error: any) {
        console.error("1-day reminder job failed:", error);
      }
    },
    {
      scheduled: false,
      timezone: "Asia/Kolkata",
    } as any
  ),
};

const sameDayReminderJob: CronJobWrapper = {
  running: false,
  job: cron.schedule(
    "0 9 * * *",
    async () => {
      try {
        console.log("Starting SAME-DAY reminder job...");

        const [
          obligationReminders,
          indentReminders,
          incidentReminders,
          observationReminders,
        ] = await Promise.all([
          sendRegulatoryTimelineReminders(0),
          sendIndentsDueDateReminders(0),
          sendIncidentsDueDateReminders(0),
          sendObservationDueDateReminders(0),
        ]);

        if (obligationReminders.totalObligations > 0) {
          console.warn(
            `CRITICAL: ${obligationReminders.totalObligations} obligations are due TODAY!`
          );
        }

        console.log("Same-day reminder job completed:", {
          obligationReminders,
          indentReminders,
          incidentReminders,
          observationReminders,
        });
      } catch (error: any) {
        console.error("Same-day reminder job failed:", error);
      }
    },
    {
      scheduled: false,
      timezone: "Asia/Kolkata",
    } as any
  ),
};
