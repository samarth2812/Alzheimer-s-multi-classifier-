export const formatObligationTableData = (rawData, actions = {}) => {
  if (!Array.isArray(rawData)) {
    return { columns: [], rows: [] };
  }

  const columns = [
    { Header: "ID", accessor: "id", width: "5%", align: "left" },
    { Header: "Current Status", accessor: "currentStepName", width: "20%", align: "left" },
    { Header: "Pending With", accessor: "pendingWith", width: "30%", align: "left" },
    { Header: "Circular Reference", accessor: "circularReference", width: "20%", align: "left" },
    { Header: "Actions", accessor: "actions", width: "15%", align: "center" },
  ];

  const rows = rawData.map((item) => ({
    id: formatText(item.id, 15),
    currentStepName: formatCurrentStep(item.currentStepName),
    pendingWith: formatText(item.responsibleOwner, 40),
    circularReference: formatText(item.circularReference, 35),
    actions: (
      <Box sx={{ display: "flex", justifyContent: "center" }}>
        <CustomIconButton
          icon={Visibility}
          label="View More"
          onClick={() => actions.onViewMore && actions.onViewMore(item)}
          size="small"
        />
      </Box>
    ),
  }));

  return { columns, rows };
};



{
  "fields": {
    "status": {
      "value": "PENDING"
    },
    "dueDate": {
      "value": "2025-07-04T12:54:00.000Z"
    },
    "category": {
      "value": "Compliance Query"
    },
    "comments": {
      "value": "None"
    },
    "priority": {
      "value": "Low"
    },
    "assignedTo": {
      "value": "dmh@gmail.com"
    },
    "department": {
      "value": "HR"
    },
    "description": {
      "value": "1234"
    }
  }
}
