import React, { useState } from "react";
import { Box, Chip, InputBase, Typography } from "@mui/material";

export const CustomChipField = ({
  label,
  value,
  onChange,
  placeholder = "Enter email",
  error,
  disabled,
  name,
}) => {
  const [inputValue, setInputValue] = useState("");

  const validateEmail = (email) => /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);

  const addEmail = (email) => {
    const trimmed = email.trim();
    if (trimmed && validateEmail(trimmed) && !value.includes(trimmed)) {
      onChange([...value, trimmed]);
      setInputValue("");
    }
  };

  const handleKeyDown = (e) => {
    if (["Enter", ",", " "].includes(e.key)) {
      e.preventDefault();
      addEmail(inputValue);
    }
  };

  const handleBlur = () => addEmail(inputValue);

  const handleDelete = (email) => onChange(value.filter((e) => e !== email));

  return (
    <Box sx={{ width: "100%" }}>
      {label && (
        <Typography
          component="label"
          sx={{
            fontSize: "0.75rem",
            fontWeight: 500,
            color: (theme) => theme.palette.custom.text2,
            mb: 0.5,
            ml: 1.6,
            display: "block",
          }}
        >
          {label}
        </Typography>
      )}

      <Box
        sx={{
          border: "2px solid",
          borderColor: error ? "red" : (theme) => theme.palette.custom.background1,
          borderRadius: 3,
          backgroundColor: "white",
          display: "flex",
          alignItems: "center",
          flexWrap: "wrap",
          p: "4px 8px",
          minHeight: "35px",
          height: "auto",
          "&:hover": {
            borderColor: "#5a3d83",
          },
          transition: "border-color 0.2s",
        }}
      >
        {value.map((email) => (
          <Chip
            key={email}
            label={email}
            onDelete={() => handleDelete(email)}
            disabled={disabled}
            size="small"
            sx={{
              height: 24,
              fontSize: "0.65rem",
              backgroundColor: (theme) => theme.palette.custom.two,
              color: (theme) => theme.palette.custom.light,
              mr: 0.5,
              "& .MuiChip-deleteIcon": {
                color: (theme) => theme.palette.custom.one,
              },
            }}
          />
        ))}

        <InputBase
          name={name}
          disabled={disabled}
          value={inputValue}
          onChange={(e) => setInputValue(e.target.value)}
          onKeyDown={handleKeyDown}
          onBlur={handleBlur}
          placeholder={placeholder}
          sx={{
            fontSize: "0.7rem",
            minHeight: "24px",
            padding: 0,
            ml: 0.5,
            flex: 1,
            "& .MuiInputBase-input": {
              padding: 0,
              color: (theme) => theme.palette.custom.text2,
            },
            "&::placeholder": {
              color: (theme) => theme.palette.custom.text2,
            },
            "&.Mui-disabled": {
              color: "#636363",
              WebkitTextFillColor: "#636363",
            },
          }}
        />
      </Box>

      {error && (
        <Typography
          variant="h6"
          color="error"
          sx={{ mt: 1, fontSize: "0.6rem", textAlign: "center", fontWeight: 400 }}
        >
          {error}
        </Typography>
      )}
    </Box>
  );
};
