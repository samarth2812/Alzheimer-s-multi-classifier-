import { Request, Response, NextFunction } from "express";
import { triggerManualReminderEmails } from "../services/reminderEmailService";
import { ApiError } from "../utils/ApiError";
import { EmailType } from "../types/emailTypes"; // optional: extract type if needed
import { customRequest } from "../types/customRequest";

export const sendManualReminderEmail = async (
  req: customRequest,
  res: Response,
  next: NextFunction
): Promise<void> => {
  try {
    const user = req.user!;
    const { emailType } = req.params; // expected to be: OBLIGATION, INDENT, etc.
    const { emailData, assignees } = req.body;

    if (!emailType || !["OBLIGATION", "INDENT", "INCIDENT", "OBSERVATION"].includes(emailType)) {
      throw ApiError.badRequest("Valid emailType is required");
    }

    if (!emailData || typeof emailData !== "object") {
      throw ApiError.badRequest("Valid emailData is required");
    }

    if (!Array.isArray(assignees) || assignees.length === 0) {
      throw ApiError.badRequest("At least one assignee is required");
    }

    await triggerManualReminderEmails(
      emailType as EmailType,
      user,
      emailData,
      assignees
    );

    res.status(200).json({
      success: true,
      message: "Reminder email(s) triggered successfully",
    });
  } catch (error) {
    next(error);
  }
};
