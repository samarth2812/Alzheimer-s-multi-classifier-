export const formatIBAAuditTrailTableData = (rawData, actions = {}) => {
  if (!Array.isArray(rawData)) {
    return { columns: [], rows: [] };
  }

  const columns = [
    { Header: "S. No.", accessor: "serialNumber", width: "5%", align: "center" },
    { Header: "Action Type", accessor: "actionType", width: "15%", align: "left" },
    { Header: "Role", accessor: "role", width: "15%", align: "left" },
    { Header: "Performed By", accessor: "performedBy", width: "20%", align: "left" },
    { Header: "Fields Changed", accessor: "fieldsChanged", width: "40%", align: "left" },
    { Header: "Date", accessor: "date", width: "5%", align: "left" },
  ];

  const rows = rawData.map((item, index) => ({
    serialNumber: (
      <Typography
        variant="body2"
        sx={{
          color: (theme) => theme.palette.custom.text1,
          fontSize: "11.2px",
          fontWeight: 500,
        }}
      >
        {index + 1}
      </Typography>
    ),
    actionType: (
      <Chip
        label={item.actionType || "N/A"}
        size="small"
        sx={{
          backgroundColor: (theme) => theme.palette.custom.background1,
          color: (theme) => theme.palette.custom.text2,
          fontSize: "0.6rem",
          height: "18px",
          textTransform: "capitalize !important",
        }}
      />
    ),
    role: (
      <Chip
        label={item.role?.replace(/_/g, " ") || "N/A"}
        size="small"
        sx={{
          backgroundColor: (theme) => theme.palette.custom.approve,
          color: (theme) => theme.palette.custom.approveText,
          fontSize: "0.6rem",
          height: "18px",
          textTransform: "capitalize !important",
        }}
      />
    ),
    performedBy: (
      <Box>
        <Typography
          variant="body2"
          sx={{
            color: (theme) => theme.palette.custom.text1,
            fontSize: "11.2px",
            fontWeight: 500,
          }}
        >
          {item.performedByName || "N/A"}
        </Typography>
        <Typography
          variant="caption"
          sx={{
            color: (theme) => theme.palette.custom.text3,
            fontSize: "10px",
          }}
        >
          {item.performedByEmail || ""}
        </Typography>
      </Box>
    ),
    fieldsChanged: <ChangesDisplay changes={item.modifications} moduleId="iba" compact={true} />,
    date: (
      <Typography
        variant="body2"
        sx={{
          color: (theme) => theme.palette.custom.text2,
          fontSize: "0.6rem",
        }}
      >
        {formatDate(item.timestamp)}
      </Typography>
    ),
  }));

  return { columns, rows };
};
