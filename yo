for (const [key, value] of Object.entries(fieldsWithoutType)) {
  const oldVal = (existingIncident as any)[key];
  let mappedNewVal: any = value;

  if (key === "department" && typeof value === "string") {
    mappedNewVal = DEPARTMENT_MAPPING[value] || value;
    updateData.department = mappedNewVal;
  } else if (key === "status" && typeof value === "string") {
    mappedNewVal = INCIDENT_STATUS_MAPPING[value] || value;
    updateData.status = mappedNewVal;
  } else if (key === "severity" && typeof value === "string") {
    mappedNewVal = INCIDENT_SEVERITY_MAPPING[value] || value;
    updateData.severity = mappedNewVal;
  } else if (key === "type" && typeof value === "string") {
    mappedNewVal = INCIDENT_TYPE_MAPPING[value] || value;
    updateData.type = mappedNewVal;
  } else if (
    (key === "dueDate" || key === "reportedDate") &&
    typeof value === "string"
  ) {
    mappedNewVal = new Date(value);
    updateData[key] = mappedNewVal;
  } else {
    updateData[key] = value;
  }

  if (oldVal !== mappedNewVal) {
    fieldChanges[key] = {
      from: oldVal,
      to: mappedNewVal,
    };
  }
}
