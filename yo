import React from "react";
import { TextField, TextFieldProps } from "@mui/material";
import { useTheme } from "@mui/material/styles";

interface CustomTextAreaProps extends Omit<TextFieldProps, "variant"> {
  isLoading?: boolean;
}

export const CustomTextArea: React.FC<CustomTextAreaProps> = ({
  value,
  onChange,
  placeholder = "",
  disabled = false,
  isLoading = false,
  autoFocus = false,
  onKeyPress,
  multiline = true,
  maxRows = 5,
  fullWidth = true,
  size = "small",
  ...rest
}) => {
  const theme = useTheme();

  return (
    <TextField
      value={value}
      onChange={onChange}
      onKeyPress={onKeyPress}
      placeholder={placeholder}
      disabled={disabled || isLoading}
      autoFocus={autoFocus}
      multiline={multiline}
      maxRows={maxRows}
      fullWidth={fullWidth}
      size={size}
      variant="outlined"
      sx={{
        "& .MuiOutlinedInput-root": {
          borderRadius: "12px",
          px: 1,
          fontSize: "0.7rem",
          backgroundColor: theme.palette.custom?.background1 || "#f4f4f4",
          "& fieldset": {
            border: "none",
          },
          "&:hover fieldset": {
            border: "none",
          },
          "&.Mui-focused fieldset": {
            border: "none",
          },
        },
        "& .MuiInputBase-input": {
          color: theme.palette.custom?.text1 || "#000",
          "&::placeholder": {
            color: theme.palette.custom?.text2 || "#999",
            opacity: 0.7,
          },
        },
      }}
      {...rest}
    />
  );
};
